{"version":3,"sources":["serviceWorker.js","components/Navigation.jsx","components/Footer.jsx","components/Home.jsx","components/About.jsx","components/Contact.jsx","components/Hero.jsx","index.js"],"names":["Boolean","window","location","hostname","match","Navigation","className","to","Footer","class","Home","src","alt","About","Contact","Hero","ReactDOM","render","basename","path","element","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"2MAYoBA,QACa,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,yBCWOC,MA1Bf,WACE,OACI,qBAAKC,UAAU,kBAAf,SACE,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,QAAf,SACI,cAAC,IAAD,CAASC,GAAG,IAAZ,oBAEJ,sBAAKD,UAAU,mBAAf,UACI,eAAC,IAAD,CAASC,GAAG,IAAID,UAAU,0BAA1B,iBAEI,sBAAMA,UAAU,UAAhB,0BAGJ,cAAC,IAAD,CAASC,GAAG,SAASD,UAAU,0BAA/B,mBAIA,cAAC,IAAD,CAASC,GAAG,WAAWD,UAAU,0BAAjC,8BCJDE,MAdf,WACE,OACE,qBAAKF,UAAU,SAAf,SACE,wBAAQG,MAAM,4BAAd,SACE,qBAAKA,MAAM,YAAX,SACE,mBAAGA,MAAM,6BAAT,qDCsBKC,MA3Bf,WACE,OACE,qBAAKJ,UAAU,OAAf,SACE,qBAAKG,MAAM,YAAX,SACE,sBAAKA,MAAM,8BAAX,UACE,qBAAKA,MAAM,WAAX,SACE,qBACEA,MAAM,iCACNE,IAAI,8BACJC,IAAI,OAGR,sBAAKH,MAAM,WAAX,UACE,oBAAIA,MAAM,oBAAV,kBACA,iSCaGI,MA3Bf,WACE,OACE,qBAAKP,UAAU,QAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,8BAAf,UACE,qBAAKA,UAAU,WAAf,SACE,qBACEA,UAAU,iCACVK,IAAI,8BACJC,IAAI,OAGR,sBAAKN,UAAU,WAAf,UACE,oBAAIA,UAAU,oBAAd,mBACA,iSCaGQ,MA3Bf,WACE,OACE,qBAAKR,UAAU,UAAf,SACE,qBAAKG,MAAM,YAAX,SACE,sBAAKA,MAAM,8BAAX,UACE,qBAAKA,MAAM,WAAX,SACE,qBACEA,MAAM,iCACNE,IAAI,8BACJC,IAAI,OAGR,sBAAKH,MAAM,WAAX,UACE,oBAAIA,MAAM,oBAAV,qBACA,iSCJGM,MAVf,WACE,OACE,qBAAKT,UAAU,OAAf,SACE,qBAAKA,UAAU,YAAf,sNCWNU,IAASC,OACP,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,eAAC,IAAD,CAAQC,SAAS,IAAjB,UACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,SAASC,QAAS,cAAC,EAAD,MAC9B,cAAC,IAAD,CAAOD,KAAK,WAAWC,QAAS,cAAC,EAAD,SAElC,cAAC,EAAD,OAGFC,SAASC,eAAe,SPuGlB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.2ba38ea3.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.0/8 are considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' }\n    })\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready.then(registration => {\n        registration.unregister();\n      });\n    }\n  }\n  ","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nfunction Navigation() {\n  return (\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n            <div className=\"col-6\">\n                <NavLink to=\"/\">Logo</NavLink>\n            </div>\n            <div className=\"col-6 text-right\">\n                <NavLink to=\"/\" className=\"btn btn-outline-primary\">\n                    Home\n                    <span className=\"sr-only\">(current)</span>\n                </NavLink>\n\n                <NavLink to=\"/about\" className=\"btn btn-outline-primary\">\n                    About\n                </NavLink>\n\n                <NavLink to=\"/contact\" className=\"btn btn-outline-primary\">\n                    Contact\n                </NavLink>\n            </div>\n        </div>\n    </div>\n  );\n}\n\nexport default Navigation;","import React from \"react\";\n\nfunction Footer() {\n  return (\n    <div className=\"footer\">\n      <footer class=\"py-5 bg-dark fixed-bottom\">\n        <div class=\"container\">\n          <p class=\"m-0 text-center text-white\">\n            Copyright &copy; Your Website 2020\n          </p>\n        </div>\n      </footer>\n    </div>\n  );\n}\n\nexport default Footer;","import React from \"react\";\n\nfunction Home() {\n  return (\n    <div className=\"home\">\n      <div class=\"container\">\n        <div class=\"row align-items-center my-5\">\n          <div class=\"col-lg-7\">\n            <img\n              class=\"img-fluid rounded mb-4 mb-lg-0\"\n              src=\"http://placehold.it/900x400\"\n              alt=\"\"\n            />\n          </div>\n          <div class=\"col-lg-5\">\n            <h1 class=\"font-weight-light\">Home</h1>\n            <p>\n              Lorem Ipsum is simply dummy text of the printing and typesetting\n              industry. Lorem Ipsum has been the industry's standard dummy text\n              ever since the 1500s, when an unknown printer took a galley of\n              type and scrambled it to make a type specimen book.\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;","import React from \"react\";\n\nfunction About() {\n  return (\n    <div className=\"about\">\n      <div className=\"container\">\n        <div className=\"row align-items-center my-5\">\n          <div className=\"col-lg-7\">\n            <img\n              className=\"img-fluid rounded mb-4 mb-lg-0\"\n              src=\"http://placehold.it/900x400\"\n              alt=\"\"\n            />\n          </div>\n          <div className=\"col-lg-5\">\n            <h1 className=\"font-weight-light\">About</h1>\n            <p>\n              Lorem Ipsum is simply dummy text of the printing and typesetting\n              industry. Lorem Ipsum has been the industry's standard dummy text\n              ever since the 1500s, when an unknown printer took a galley of\n              type and scrambled it to make a type specimen book.\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default About;","import React from \"react\";\n\nfunction Contact() {\n  return (\n    <div className=\"contact\">\n      <div class=\"container\">\n        <div class=\"row align-items-center my-5\">\n          <div class=\"col-lg-7\">\n            <img\n              class=\"img-fluid rounded mb-4 mb-lg-0\"\n              src=\"http://placehold.it/900x400\"\n              alt=\"\"\n            />\n          </div>\n          <div class=\"col-lg-5\">\n            <h1 class=\"font-weight-light\">Contact</h1>\n            <p>\n              Lorem Ipsum is simply dummy text of the printing and typesetting\n              industry. Lorem Ipsum has been the industry's standard dummy text\n              ever since the 1500s, when an unknown printer took a galley of\n              type and scrambled it to make a type specimen book.\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Contact;","import React from \"react\";\n\nfunction Hero() {\n  return (\n    <div className=\"Hero\">\n      <div className=\"container\">\n        HERO Lorem ipsum dolor sit amet, consectetur adipisicing elit. Odit sunt ea rem deleniti nobis inventore quis id nostrum vitae eos aliquam ab est sed deserunt corrupti, officia nulla animi aliquid.\n      </div>\n    </div>\n  );\n}\n\nexport default Hero;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"./simple-grid.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n// import { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport { HashRouter as Router, Route, Routes } from 'react-router-dom'\nimport {\n  Navigation,\n  Footer,\n  Home,\n  About,\n  Contact,\n} from \"./components\";\nimport Hero from \"./components/Hero\";\n\nReactDOM.render(\n  <Router>\n    <Navigation />\n    <Hero />\n    <Routes basename=\"/\">\n      <Route path=\"/\" element={<Home />} />\n      <Route path=\"/about\" element={<About />} />\n      <Route path=\"/contact\" element={<Contact />} />\n    </Routes>\n    <Footer />\n  </Router>,\n\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();"],"sourceRoot":""}